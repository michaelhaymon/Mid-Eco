
  CREATE TABLE "MICHAEL"."SERF" 
   (	"SERF_ID" NUMBER NOT NULL ENABLE, 
	"FIRST_NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"LAST_NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"BIRTHDAY" DATE NOT NULL ENABLE, 
	 CONSTRAINT "SERF_PK" PRIMARY KEY ("SERF_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "MICHAEL"."SERF_TRG" 
BEFORE INSERT ON SERF 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.SERF_ID IS NULL THEN
      SELECT SERF_SEQ.NEXTVAL INTO :NEW.SERF_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "MICHAEL"."SERF_TRG" ENABLE;



  CREATE TABLE "MICHAEL"."ITEM" 
   (	"ITEM_ID" NUMBER NOT NULL ENABLE, 
	"ITEM_NAME" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"ITEM_TYPE" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	"ITEM_WEIGHT" VARCHAR2(20 BYTE) NOT NULL ENABLE, 
	 CONSTRAINT "ITEM_PK" PRIMARY KEY ("ITEM_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "MICHAEL"."ITEM_TRG" 
BEFORE INSERT ON ITEM 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ITEM_ID IS NULL THEN
      SELECT ITEM_SEQ.NEXTVAL INTO :NEW.ITEM_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "MICHAEL"."ITEM_TRG" ENABLE;



  CREATE TABLE "MICHAEL"."INVENTORY" 
   (	"INVENTORY_ID" NUMBER NOT NULL ENABLE, 
	"SERF_ID" NUMBER NOT NULL ENABLE, 
	"ITEM_ID" NUMBER NOT NULL ENABLE, 
	"QUANTITY" NUMBER NOT NULL ENABLE, 
	 CONSTRAINT "INVENTORY_PK" PRIMARY KEY ("INVENTORY_ID")
  USING INDEX PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM"  ENABLE, 
	 CONSTRAINT "INVENTORY_FK1" FOREIGN KEY ("SERF_ID")
	  REFERENCES "MICHAEL"."SERF" ("SERF_ID") ENABLE, 
	 CONSTRAINT "INVENTORY_FK2" FOREIGN KEY ("ITEM_ID")
	  REFERENCES "MICHAEL"."ITEM" ("ITEM_ID") ENABLE
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1 BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "SYSTEM" ;

  CREATE OR REPLACE TRIGGER "MICHAEL"."INVENTORY_TRG" 
BEFORE INSERT ON INVENTORY 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.INVENTORY_ID IS NULL THEN
      SELECT INVENTORY_SEQ.NEXTVAL INTO :NEW.INVENTORY_ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
/
ALTER TRIGGER "MICHAEL"."INVENTORY_TRG" ENABLE;
